{"version":3,"file":"static/js/135.d0d4d0cb.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAS,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFrB,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,qDAOTC,EAAU,mCAAG,WAAMC,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,oBACmBN,IAFlB,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAMVG,EAAU,mCAAG,WAAMD,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BAC2BN,IAF1B,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAMVI,EAAU,mCAAG,WAAMF,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BAC2BN,EAD3B,YADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVK,EAAS,mCAAG,WAAMC,GAAN,uFACAR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCU,EADhC,yBADA,cACjBP,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,qD,4HC9BtB,EAA8B,kC,SCMf,SAASO,IAAgB,IAAD,IACrC,GAAoCC,EAAAA,EAAAA,YAApC,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,YAAtC,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAkCJ,EAAAA,EAAAA,YAAlC,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0CN,EAAAA,EAAAA,YAA1C,eAAOO,EAAP,KAAsBC,EAAtB,KACA,GAAsCR,EAAAA,EAAAA,UAAS,IAA/C,eAAOS,EAAP,KAAoBC,EAApB,KACA,GAAkCV,EAAAA,EAAAA,YAAlC,eAAOW,EAAP,KAAkBC,EAAlB,KAEA,GAA0BZ,EAAAA,EAAAA,UAAS,MAAnC,eAAOa,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAGFE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAezC,OAbAC,EAAAA,EAAAA,YAAU,YACR5B,EAAAA,EAAAA,IAAWsB,GACRO,MAAK,SAAA9B,GACJU,EAAcV,EAAK+B,OACnBnB,EAAeZ,EAAKgC,aACpBlB,EAAad,EAAKiC,cAClBjB,EAAiBhB,EAAKkC,UACtBhB,EAAelB,EAAKmC,QACpBf,EAAapB,EAAKoC,aACnB,IACAC,OAAM,SAAAhB,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,CAACE,KAGF,2BACGF,IAAS,oCAER,iCACE,SAAC,KAAD,CAAMiB,GAAIb,EAAV,sBACA,iBAAKc,UAAWC,EAAhB,WAEI,gBACEC,IACE9B,EAAW,0CAC4BA,GACnC,oNAEN+B,IAAKjC,KAGT,4BACE,0BACGA,EADH,IACgBU,EADhB,QAGA,wCAAgBwB,KAAKC,MAAkB,GAAZ/B,GAA3B,QACA,sCACA,uBAAIE,KACJ,oCACA,uBAAIE,EAAY4B,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAGlD,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAG,OAAOX,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMa,GAAG,UAAUX,MAAO,CAAEC,KAAMH,GAAlC,8BAMN,SAAC,EAAAwB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAMX,C","sources":["API/api.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ced4c166bd9d448eb708ac1c947ec551';\n\nexport const getTrends = async () => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getCredits = async movieId => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovies = async searchData => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${searchData}&include_adult=false`\n  );\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Description\":\"MovieDetails_Description__DW17q\"};","import { Suspense } from 'react';\nimport { getDetails } from 'API/api';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const [movieTitle, setMovieTitle] = useState();\n  const [moviePoster, setMoviePoster] = useState();\n  const [movieVote, setMovieVote] = useState();\n  const [movieOverview, setMovieOverview] = useState();\n  const [movieGenres, setMovieGenres] = useState([]);\n  const [movieDate, setMovieDate] = useState();\n\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    getDetails(id)\n      .then(data => {\n        setMovieTitle(data.title);\n        setMoviePoster(data.poster_path);\n        setMovieVote(data.vote_average);\n        setMovieOverview(data.overview);\n        setMovieGenres(data.genres);\n        setMovieDate(data.release_date);\n      })\n      .catch(error => setError(error));\n  }, [id]);\n\n  return (\n    <div>\n      {error && <h1>Error!</h1>}\n      {\n        <>\n          <Link to={backHref}>Go back</Link>\n          <div className={css.Description}>\n            {\n              <img\n                src={\n                  moviePoster\n                    ? `https://image.tmdb.org/t/p/w200/${moviePoster}`\n                    : 'https://media.istockphoto.com/id/1357365823/vector/default-image-icon-vector-missing-picture-page-for-website-design-or-mobile-app-no-photo.jpg?s=612x612&w=0&k=20&c=PM_optEhHBTZkuJQLlCjLz-v3zzxp-1mpNQZsdjrbns='\n                }\n                alt={movieTitle}\n              />\n            }\n            <div>\n              <h1>\n                {movieTitle}({movieDate})\n              </h1>\n              <p>User score: {Math.round(movieVote * 10)}%</p>\n              <h2>Overview</h2>\n              <p>{movieOverview}</p>\n              <h2>Genres</h2>\n              <p>{movieGenres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </div>\n          <div>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link to=\"Cast\" state={{ from: backHref }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"Reviews\" state={{ from: backHref }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      }\n    </div>\n  );\n}\n"],"names":["MAIN_URL","API_KEY","getTrends","axios","response","data","getDetails","movieId","getCredits","getReviews","getMovies","searchData","MovieDetails","useState","movieTitle","setMovieTitle","moviePoster","setMoviePoster","movieVote","setMovieVote","movieOverview","setMovieOverview","movieGenres","setMovieGenres","movieDate","setMovieDate","error","setError","id","useParams","backHref","useLocation","state","from","useEffect","then","title","poster_path","vote_average","overview","genres","release_date","catch","to","className","css","src","alt","Math","round","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}